#!/usr/bin/env ruby

require 'yummi'
require 'optionparser'

require_relative '../lib/sherlog_holmes'

include Sherlog

@opts = OptionParser::new
@stacktrace = true
@filter = nil
@operation = :and
@listeners = []

def add_filter(filter)
  if @filter
    @filter = @filter.send @operation, filter
  else
    @filter = filter
  end
end

@opts.banner = 'Usage: sherlog [options] <type> <logfile>'

@opts.on '-p FILE', '--patterns FILE', 'Configures the patterns' do |file|
  Sherlog.load_patterns file
end

@opts.on '-c EXPRESSION', '--category EXPRESSION', 'Set the category filter expression' do |expression|
  add_filter Filter::category(expression)
end

@opts.on '-l EXPRESSION', '--level EXPRESSION', 'Set the level filter expression' do |expression|
  add_filter Filter::level(expression)
end

@opts.on '-m EXPRESSION', '--message EXPRESSION', 'Set the message filter expression' do |expression|
  add_filter Filter::message(expression)
end

@opts.on '-e EXPRESSION', '--exception EXPRESSION', 'Sets the exception filter expression' do |expression|
  add_filter Filter::exception(expression)
end

@opts.on '--only-exceptions', 'Filter only exception entries' do
  add_filter Filter::exceptions
end

@opts.on '--and', 'Sets the next filter to use the AND operator' do
  @operation = :and
end

@opts.on '--or', 'Sets the next filter to use the OR operation' do
  @operation = :or
end

@opts.on '--print', 'Prints the filtered entries' do
  @listeners << lambda do |entry|
    puts entry
  end
end

@opts.on '-h', '--help', 'Shows the usage help' do
  puts @opts
  exit
end

@opts.parse! ARGV

type, file = ARGV
parser = Sherlog.parser type
parser.filter @filter
@listeners.each do |listener|
  parser.on_new_entry listener
end
parser.parse file
